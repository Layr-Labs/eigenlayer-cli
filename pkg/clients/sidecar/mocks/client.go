// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Layr-Labs/eigenlayer-cli/pkg/clients/sidecar (interfaces: ISidecarClient)
//
// Generated by this command:
//
//	mockgen -destination=mocks/client.go -package=mocks github.com/Layr-Labs/eigenlayer-cli/pkg/clients/sidecar ISidecarClient
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	rewards "github.com/Layr-Labs/protocol-apis/gen/protos/eigenlayer/sidecar/v1/rewards"
	gomock "go.uber.org/mock/gomock"
)

// MockISidecarClient is a mock of ISidecarClient interface.
type MockISidecarClient struct {
	ctrl     *gomock.Controller
	recorder *MockISidecarClientMockRecorder
}

// MockISidecarClientMockRecorder is the mock recorder for MockISidecarClient.
type MockISidecarClientMockRecorder struct {
	mock *MockISidecarClient
}

// NewMockISidecarClient creates a new mock instance.
func NewMockISidecarClient(ctrl *gomock.Controller) *MockISidecarClient {
	mock := &MockISidecarClient{ctrl: ctrl}
	mock.recorder = &MockISidecarClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockISidecarClient) EXPECT() *MockISidecarClientMockRecorder {
	return m.recorder
}

// GenerateClaimProof mocks base method.
func (m *MockISidecarClient) GenerateClaimProof(arg0 context.Context, arg1 *rewards.GenerateClaimProofRequest) (*rewards.GenerateClaimProofResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateClaimProof", arg0, arg1)
	ret0, _ := ret[0].(*rewards.GenerateClaimProofResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateClaimProof indicates an expected call of GenerateClaimProof.
func (mr *MockISidecarClientMockRecorder) GenerateClaimProof(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateClaimProof", reflect.TypeOf((*MockISidecarClient)(nil).GenerateClaimProof), arg0, arg1)
}

// GetSummarizedRewardsForEarner mocks base method.
func (m *MockISidecarClient) GetSummarizedRewardsForEarner(arg0 context.Context, arg1 *rewards.GetSummarizedRewardsForEarnerRequest) (*rewards.GetSummarizedRewardsForEarnerResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSummarizedRewardsForEarner", arg0, arg1)
	ret0, _ := ret[0].(*rewards.GetSummarizedRewardsForEarnerResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSummarizedRewardsForEarner indicates an expected call of GetSummarizedRewardsForEarner.
func (mr *MockISidecarClientMockRecorder) GetSummarizedRewardsForEarner(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSummarizedRewardsForEarner", reflect.TypeOf((*MockISidecarClient)(nil).GetSummarizedRewardsForEarner), arg0, arg1)
}

// ListDistributionRoots mocks base method.
func (m *MockISidecarClient) ListDistributionRoots(arg0 context.Context, arg1 *rewards.ListDistributionRootsRequest) (*rewards.ListDistributionRootsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDistributionRoots", arg0, arg1)
	ret0, _ := ret[0].(*rewards.ListDistributionRootsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDistributionRoots indicates an expected call of ListDistributionRoots.
func (mr *MockISidecarClientMockRecorder) ListDistributionRoots(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDistributionRoots", reflect.TypeOf((*MockISidecarClient)(nil).ListDistributionRoots), arg0, arg1)
}
